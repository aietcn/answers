// automatically generated by the FlatBuffers compiler, do not modify

package self.data.format.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FlatbuffersData extends Table {
  public static FlatbuffersData getRootAsFlatbuffersData(ByteBuffer _bb) { return getRootAsFlatbuffersData(_bb, new FlatbuffersData()); }
  public static FlatbuffersData getRootAsFlatbuffersData(ByteBuffer _bb, FlatbuffersData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public FlatbuffersData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte type() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 1; }
  public byte state() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) : 1; }
  public long timestamp() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String uid() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer uidAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public SensorData list(int j) { return list(new SensorData(), j); }
  public SensorData list(SensorData obj, int j) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int listLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }

  public static int createFlatbuffersData(FlatBufferBuilder builder,
      byte type,
      byte state,
      long timestamp,
      int uidOffset,
      int listOffset) {
    builder.startObject(5);
    FlatbuffersData.addTimestamp(builder, timestamp);
    FlatbuffersData.addList(builder, listOffset);
    FlatbuffersData.addUid(builder, uidOffset);
    FlatbuffersData.addState(builder, state);
    FlatbuffersData.addType(builder, type);
    return FlatbuffersData.endFlatbuffersData(builder);
  }

  public static void startFlatbuffersData(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(0, type, 1); }
  public static void addState(FlatBufferBuilder builder, byte state) { builder.addByte(1, state, 1); }
  public static void addTimestamp(FlatBufferBuilder builder, long timestamp) { builder.addLong(2, timestamp, 0L); }
  public static void addUid(FlatBufferBuilder builder, int uidOffset) { builder.addOffset(3, uidOffset, 0); }
  public static void addList(FlatBufferBuilder builder, int listOffset) { builder.addOffset(4, listOffset, 0); }
  public static int createListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endFlatbuffersData(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishFlatbuffersDataBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

